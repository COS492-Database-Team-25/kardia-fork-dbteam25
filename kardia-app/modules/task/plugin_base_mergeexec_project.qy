$Version=2$
plugin_base_mergeexec_project "system/query"
    {
    partner_a "query/parameter" { type=string; style=strnull; }
    partner_b "query/parameter" { type=string; style=strnull; }
    partner_c "query/parameter" { type=string; style=strnull; }

    sql = " -- Partner list
	    declare object info;
	    select :info:partners = ralign(:parameters:partner_a, 16) + ralign(:parameters:partner_b, 16) + ralign(isnull(:parameters:partner_c, ''), 16);

	    -- Phase One, copy, participant
	    insert
		/apps/kardia/data/Kardia_DB/t_participant/rows
	    select
		p_partner_key = '#' + ltrim(substring(:info:partners, (charindex(:abc:letter, 'ABC') - 1)*16 + 1, 16)),
		:pp:t_project_id,
		:pp:t_role,
		:pp:s_date_created,
		:pp:s_created_by,
		:pp:s_date_modified,
		:pp:s_modified_by
	    from
		/apps/kardia/modules/base/abc.csv/rows abc,
		/apps/kardia/data/Kardia_DB/p_merge/rows m,
		/apps/kardia/data/Kardia_DB/t_participant/rows pp
	    where
		:m:p_data_source = 'Projects' and
		:m:p_partner_key_a = :parameters:partner_a and
		:m:p_partner_key_b = :parameters:partner_b and
		charindex(:abc:letter, :m:p_disposition) >= 2 and
		:pp:p_partner_key = ltrim(substring(:info:partners, (charindex(upper(substring(:m:p_disposition, 1, 1)), 'ABC') - 1)*16 + 1, 16))
	    ;

	    -- Phase One, copy, sprint participant
	    insert
		/apps/kardia/data/Kardia_DB/t_sprint_participant/rows
	    select
		p_partner_key = '#' + ltrim(substring(:info:partners, (charindex(:abc:letter, 'ABC') - 1)*16 + 1, 16)),
		:sp:t_sprint_id,
		:sp:t_project_id,
		:sp:t_skill_ratio,
		:sp:s_date_created,
		:sp:s_created_by,
		:sp:s_date_modified,
		:sp:s_modified_by
	    from
		/apps/kardia/modules/base/abc.csv/rows abc,
		/apps/kardia/data/Kardia_DB/p_merge/rows m,
		/apps/kardia/data/Kardia_DB/t_sprint_participant/rows sp
	    where
		:m:p_data_source = 'Projects' and
		:m:p_partner_key_a = :parameters:partner_a and
		:m:p_partner_key_b = :parameters:partner_b and
		charindex(:abc:letter, :m:p_disposition) >= 2 and
		:sp:p_partner_key = ltrim(substring(:info:partners, (charindex(upper(substring(:m:p_disposition, 1, 1)), 'ABC') - 1)*16 + 1, 16))
	    ;

	    -- Phase One, copy, assignee
	    insert
		/apps/kardia/data/Kardia_DB/t_assignee/rows
	    select
		p_partner_key = '#' + ltrim(substring(:info:partners, (charindex(:abc:letter, 'ABC') - 1)*16 + 1, 16)),
		:ta:t_task_id,
		:ta:s_date_created,
		:ta:s_created_by,
		:ta:s_date_modified,
		:ta:s_modified_by
	    from
		/apps/kardia/modules/base/abc.csv/rows abc,
		/apps/kardia/data/Kardia_DB/p_merge/rows m,
		/apps/kardia/data/Kardia_DB/t_assignee/rows ta
	    where
		:m:p_data_source = 'Projects' and
		:m:p_partner_key_a = :parameters:partner_a and
		:m:p_partner_key_b = :parameters:partner_b and
		charindex(:abc:letter, :m:p_disposition) >= 2 and
		:ta:p_partner_key = ltrim(substring(:info:partners, (charindex(upper(substring(:m:p_disposition, 1, 1)), 'ABC') - 1)*16 + 1, 16))
	    ;

	    -- Phase Two, delete/cut, participant
	    delete
		identity /apps/kardia/data/Kardia_DB/t_participant/rows pp,
		/apps/kardia/data/Kardia_DB/p_merge/rows m
	    where
		:m:p_data_source = 'Projects' and
		:m:p_partner_key_a = :parameters:partner_a and
		:m:p_partner_key_b = :parameters:partner_b and
		ascii(:m:p_disposition) > 96 and
		:pp:p_partner_key = ltrim(substring(:info:partners, (charindex(substring(:m:p_disposition, 1, 1), 'abc') - 1)*16 + 1, 16))
	    ;

	    -- Phase Two, delete/cut, sprint participant
	    delete
		identity /apps/kardia/data/Kardia_DB/t_sprint_participant/rows sp,
		/apps/kardia/data/Kardia_DB/p_merge/rows m
	    where
		:m:p_data_source = 'Projects' and
		:m:p_partner_key_a = :parameters:partner_a and
		:m:p_partner_key_b = :parameters:partner_b and
		ascii(:m:p_disposition) > 96 and
		:sp:p_partner_key = ltrim(substring(:info:partners, (charindex(substring(:m:p_disposition, 1, 1), 'abc') - 1)*16 + 1, 16))
	    ;

	    -- Phase Two, delete/cut, assignee
	    delete
		identity /apps/kardia/data/Kardia_DB/t_assignee/rows ta,
		/apps/kardia/data/Kardia_DB/p_merge/rows m
	    where
		:m:p_data_source = 'Projects' and
		:m:p_partner_key_a = :parameters:partner_a and
		:m:p_partner_key_b = :parameters:partner_b and
		ascii(:m:p_disposition) > 96 and
		:ta:p_partner_key = ltrim(substring(:info:partners, (charindex(substring(:m:p_disposition, 1, 1), 'abc') - 1)*16 + 1, 16))
	    ;

	    -- Phase Three, correct our temporary keys, participant
	    update
		/apps/kardia/data/Kardia_DB/t_participant/rows
	    set
		:p_partner_key = substring(rtrim(:p_partner_key), 2, 16)
	    where
		substring(:p_partner_key, 1, 1) = '#' and
		(:p_partner_key = '#' + :parameters:partner_a or :p_partner_key = '#' + :parameters:partner_b or :p_partner_key = '#' + :parameters:partner_c)
	    ;

	    -- Phase Three, correct our temporary keys, sprint participant
	    update
		/apps/kardia/data/Kardia_DB/t_sprint_participant/rows
	    set
		:p_partner_key = substring(rtrim(:p_partner_key), 2, 16)
	    where
		substring(:p_partner_key, 1, 1) = '#' and
		(:p_partner_key = '#' + :parameters:partner_a or :p_partner_key = '#' + :parameters:partner_b or :p_partner_key = '#' + :parameters:partner_c)
	    ;

	    -- Phase Three, correct our temporary keys, assigneee
	    update
		/apps/kardia/data/Kardia_DB/t_assignee/rows
	    set
		:p_partner_key = substring(rtrim(:p_partner_key), 2, 16)
	    where
		substring(:p_partner_key, 1, 1) = '#' and
		(:p_partner_key = '#' + :parameters:partner_a or :p_partner_key = '#' + :parameters:partner_b or :p_partner_key = '#' + :parameters:partner_c)
	    ;

	    -- Phase four, clean up anything that would not copy over (conflicting records)
	    delete
		/apps/kardia/data/Kardia_DB/t_participant/rows
	    where
		substring(:p_partner_key, 1, 1) = '#' and
		(:p_partner_key = '#' + :parameters:partner_a or :p_partner_key = '#' + :parameters:partner_b or :p_partner_key = '#' + :parameters:partner_c)
	    ;

	    -- Phase four, clean up anything that would not copy over (conflicting records), sprint participant
	    delete
		/apps/kardia/data/Kardia_DB/t_sprint_participant/rows
	    where
		substring(:p_partner_key, 1, 1) = '#' and
		(:p_partner_key = '#' + :parameters:partner_a or :p_partner_key = '#' + :parameters:partner_b or :p_partner_key = '#' + :parameters:partner_c)
	    ;

	    -- Phase four, clean up anything that would not copy over (conflicting records), assignee
	    delete
		/apps/kardia/data/Kardia_DB/t_assignee/rows
	    where
		substring(:p_partner_key, 1, 1) = '#' and
		(:p_partner_key = '#' + :parameters:partner_a or :p_partner_key = '#' + :parameters:partner_b or :p_partner_key = '#' + :parameters:partner_c)
	    ;

	    -- Return
	    select 1 where 1 = 0
	    ";
    }
