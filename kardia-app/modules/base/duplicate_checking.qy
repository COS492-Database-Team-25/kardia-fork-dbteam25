$Version=2$
update_descriptives_new "system/query"
    {
    partner "query/parameter" { type=string; style=strnull; }
    sql = " 
	-- Create a temporary collection containing partner data
	    declare collection tmp_partner_data scope query;
	    delete from collection tmp_partner_data;

	    insert
		collection tmp_partner_data
	    select
		-- One p_partner key is sufficient for all three tables invlolved
		-- Start of p partner
		p_partner_key = :p:p_partner_key,
		p_given_name = :p:p_given_name,
		p_preferred_name = :p:p_preferred_name,
		p_surname = :p:p_surname,
		p_surname_first	= :p:p_surname_first,
		p_suffix = :p:p_suffix,
		p_org_name = :p:p_org_name,
		p_gender = :p:p_gender,
		-- Start of p location.
		--Concatenate address fields
		p_address_1 = nth(isnull(:l:p_address_1,'') + isnull(:l:p_address_2,'') + isnull(:l:p_address_3,'') + isnull(:l:p_city,'') + isnull(:l:p_state_province,'') + isnull(:l:p_country_code,'') + isnull(:l:p_postal_code,''), 1),
		p_address_2 = nth(isnull(:l:p_address_1,'') + isnull(:l:p_address_2,'') + isnull(:l:p_address_3,'') + isnull(:l:p_city,'') + isnull(:l:p_state_province,'') + isnull(:l:p_country_code,'') + isnull(:l:p_postal_code,''), 2),
		p_address_3 = nth(isnull(:l:p_address_1,'') + isnull(:l:p_address_2,'') + isnull(:l:p_address_3,'') + isnull(:l:p_city,'') + isnull(:l:p_state_province,'') + isnull(:l:p_country_code,'') + isnull(:l:p_postal_code,''), 3),
		--Start of p contact info
		--Create phone number fields
		p_contact_data_phone1 = isnull((select
						nth(isnull(:c2:p_phone_country,'') + isnull(:c2:p_phone_area_city,'') + isnull(:c2:p_contact_data,''), 1)
					from 
						/apps/kardia/data/Kardia_DB/p_contact_info/rows c2
					where
						:c2:p_partner_key = :p:p_partner_key and
						(:c2:p_contact_type = 'P' or :c2:p_contact_type = 'C')
					order by
						:c2:p_contact_id asc,
						:c2:s_date_modified desc
					), ''),
		p_contact_data_phone2 = isnull((select
						nth(isnull(:c2:p_phone_country,'') + isnull(:c2:p_phone_area_city,'') + isnull(:c2:p_contact_data,''), 2)
					from 
						/apps/kardia/data/Kardia_DB/p_contact_info/rows c2
					where
						:c2:p_partner_key = :p:p_partner_key and
						(:c2:p_contact_type = 'P' or :c2:p_contact_type = 'C')
					order by
						:c2:p_contact_id asc,
						:c2:s_date_modified desc
					), ''),
		p_contact_data_phone3 = isnull((select
						nth(isnull(:c2:p_phone_country,'') + isnull(:c2:p_phone_area_city,'') + isnull(:c2:p_contact_data,''), 3)
					from 
						/apps/kardia/data/Kardia_DB/p_contact_info/rows c2
					where
						:c2:p_partner_key = :p:p_partner_key and
						(:c2:p_contact_type = 'P' or :c2:p_contact_type = 'C')
					order by
						:c2:p_contact_id asc,
						:c2:s_date_modified desc
					), ''),
		--Create email fields
		p_contact_data_email1 = isnull((select
						nth(isnull(:c2:p_contact_data,''), 1)
					from 
						/apps/kardia/data/Kardia_DB/p_contact_info/rows c2
					where
						:c2:p_partner_key = :p:p_partner_key and
						:c2:p_contact_type = 'E'
					order by
						:c2:p_contact_id asc,
						:c2:s_date_modified desc
					), ''),
		p_contact_data_email2 = isnull((select
						nth(isnull(:c2:p_contact_data,''), 2)
					from 
						/apps/kardia/data/Kardia_DB/p_contact_info/rows c2
					where
						:c2:p_partner_key = :p:p_partner_key and
						:c2:p_contact_type = 'E'
					order by
						:c2:p_contact_id asc,
						:c2:s_date_modified desc
					), ''),
		p_contact_data_email3 = isnull((select
						nth(isnull(:c2:p_contact_data,''), 3)
					from 
						/apps/kardia/data/Kardia_DB/p_contact_info/rows c2
					where
						:c2:p_partner_key = :p:p_partner_key and
						:c2:p_contact_type = 'E'
					order by
						:c2:p_contact_id asc,
						:c2:s_date_modified desc
					), '')
	    from
		/apps/kardia/data/Kardia_DB/p_partner/rows p,
		/apps/kardia/data/Kardia_DB/p_location/rows l
	    where
		:p:p_partner_key *= :l:p_partner_key
	    group by
	    	:p:p_partner_key
	    order by
		:p:p_partner_key asc,
		:l:p_partner_key asc,
		:l:s_date_modified desc
	    ;
  
	--Return the dataset to the caller
	    select
		*
	    from
		collection tmp_partner_data
	";
    }
