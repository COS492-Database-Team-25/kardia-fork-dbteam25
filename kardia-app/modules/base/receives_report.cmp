$Version=2$
receives_report "widget/component-decl"
    {
    // Connect a report with a partner and set a
    // report parameter.
    ConnectReport "widget/component-decl-action" { }
    Connected "widget/component-decl-event" { }
    connect_cn "widget/connector"
	{
	event=ConnectReport;
	target=connect_osrc;
	action=QueryParam;
	report_group=runclient(:report_group);
	partner=runclient(:partner);
	method=runclient(:method);
	param=runclient(:param);
	value=runclient(:value);
	}

    connect_osrc "widget/osrc"
	{
	cr_report_group "widget/parameter"	{ param_name=report_group; type=string; }
	cr_partner "widget/parameter"		{ param_name=partner; type=string; }
	cr_method "widget/parameter"		{ param_name=method; type=string; }
	cr_param "widget/parameter"		{ param_name=param; type=string; }
	cr_value "widget/parameter"		{ param_name=value; type=string; }

	replicasize=1; readahead=1; autoquery=never;
	sql = " INSERT
			/apps/kardia/data/Kardia_DB/r_group_report/rows
		SELECT
			r_group_name = :parameters:report_group,
			r_delivery_method = :parameters:method,
			p_recipient_partner_key = :parameters:partner,
			r_is_active = 0,
			s_date_created = getdate(),
			s_created_by = user_name(),
			s_date_modified = getdate(),
			s_modified_by = user_name()
		HAVING
			(select count(1) from /apps/kardia/data/Kardia_DB/r_group_report_param/rows rp where :rp:r_group_name = :parameters:report_group and :rp:r_delivery_method = :parameters:method and :rp:p_recipient_partner_key = :parameters:partner and :rp:r_param_name = :parameters:param and :rp:r_param_value = :parameters:value) = 0
		;

		INSERT
			/apps/kardia/data/Kardia_DB/r_group_report_param/rows
		SELECT
			r_group_name = :parameters:report_group,
			r_delivery_method = :parameters:method,
			p_recipient_partner_key = :parameters:partner,
			r_param_name = :parameters:param,
			r_param_value = :parameters:value,
			-- get the r_report_id that was just inserted above.
			r_report_id = (select max(:r_report_id) from /apps/kardia/data/Kardia_DB/r_group_report/rows where :r_group_name = :parameters:report_group and :r_delivery_method = :parameters:method and :p_recipient_partner_key = :parameters:partner),
			s_date_created = getdate(),
			s_created_by = user_name(),
			s_date_modified = getdate(),
			s_modified_by = user_name()
		HAVING
			(select count(1) from /apps/kardia/data/Kardia_DB/r_group_report_param/rows rp where :rp:r_group_name = :parameters:report_group and :rp:r_delivery_method = :parameters:method and :rp:p_recipient_partner_key = :parameters:partner and :rp:r_param_name = :parameters:param and :rp:r_param_value = :parameters:value) = 0
		;

		UPDATE
			IDENTITY /apps/kardia/data/Kardia_DB/r_group_report/rows rpt,
			/apps/kardia/data/Kardia_DB/r_group_report_param/rows rp
		SET
			:rpt:r_is_active = 1
		WHERE
			:rp:r_group_name = :parameters:report_group and
			:rp:r_delivery_method = :parameters:method and
			:rp:p_recipient_partner_key = :parameters:partner and
			:rp:r_param_name = :parameters:param and
			:rp:r_param_value = :parameters:value and
			:rp:r_group_name = :rpt:r_group_name and
			:rp:r_delivery_method = :rpt:r_delivery_method and
			:rp:p_recipient_partner_key = :rpt:p_recipient_partner_key and
			:rp:r_report_id = :rpt:r_report_id
		";

	end_connect "widget/connector"
	    { 
	    event=EndQuery;
	    target=receives_report;
	    action=Connected;
	    }
	}

    // Disconnect a report from a partner.
    DisconnectReport "widget/component-decl-action" { }
    Disconnected "widget/component-decl-event" { }
    disconnect_cn "widget/connector"
	{
	event=DisconnectReport;
	target=disconnect_osrc;
	action=QueryParam;
	report_group=runclient(:report_group);
	partner=runclient(:partner);
	method=runclient(:method);
	param=runclient(:param);
	value=runclient(:value);
	}

    disconnect_osrc "widget/osrc"
	{
	dr_report_group "widget/parameter"	{ param_name=report_group; type=string; }
	dr_partner "widget/parameter"		{ param_name=partner; type=string; }
	dr_method "widget/parameter"		{ param_name=method; type=string; }
	dr_param "widget/parameter"		{ param_name=param; type=string; }
	dr_value "widget/parameter"		{ param_name=value; type=string; }

	replicasize=1; readahead=1; autoquery=never;
	sql = " UPDATE
			IDENTITY /apps/kardia/data/Kardia_DB/r_group_report/rows rpt,
			/apps/kardia/data/Kardia_DB/r_group_report_param/rows rp
		SET
			:rpt:r_is_active = 0
		WHERE
			:rp:r_group_name = :parameters:report_group and
			:rp:r_delivery_method = :parameters:method and
			:rp:p_recipient_partner_key = :parameters:partner and
			:rp:r_param_name = :parameters:param and
			:rp:r_param_value = :parameters:value and
			:rp:r_group_name = :rpt:r_group_name and
			:rp:r_delivery_method = :rpt:r_delivery_method and
			:rp:p_recipient_partner_key = :rpt:p_recipient_partner_key and
			:rp:r_report_id = :rpt:r_report_id
		";

	end_disconnect "widget/connector"
	    { 
	    event=EndQuery;
	    target=receives_report;
	    action=Disconnected;
	    }
	}
    }
