$Version=2$
chat "widget/component-decl"
    {
    width=400; height=300;

    WithWhom "widget/parameter" { type=string; default=runserver(user_name()); deploy_to_client=yes; }

    Stop "widget/component-decl-action" {}
    Stop_cn "widget/connector" { event=Stop; target=chat_timer; action=CancelTimer; }

    Start "widget/component-decl-action" {}
    Start_cn "widget/connector" { event=Start; target=chat_timer; action=SetTimer; Time=1; }

    chat_timer "widget/timer"
	{
	msec=30000;
	auto_reset=0;
	auto_start=0;
	interval_cn "widget/connector" { target=chat_osrc; event=Expire; action=Refresh; }
	}

    chat_osrc "widget/osrc"
	{
	sql = runserver("select hist = sum('[' + condition(datepart(year,:c_date) != datepart(year,getdate()) or datepart(month,:c_date) != datepart(month, getdate()) or datepart(day,:c_date) != datepart(day,getdate()), '' + datepart(month,:c_date) + '/' + datepart(day,:c_date) + condition(datepart(year,getdate()) != datepart(year,:c_date), '/' + datepart(year,:c_date), '') + ' ' ,'') + condition(datepart(hour,:c_date) < 10, '0', '') + datepart(hour,:c_date) + ':' + condition(datepart(minute,:c_date) < 10, '0', '') + datepart(minute,:c_date) + '] ' + :c_from + ': ' + :c_message + '\n') - '\n' from /apps/kardia/data/Chat.csv/rows where (:c_from = " + quote(user_name()) + " and :c_to = " + quote(:this:WithWhom) + ") or (:c_from = " + quote(:this:WithWhom) + " and :c_to = " + quote(user_name()) + ")");
	baseobj = "/apps/kardia/data/Chat.csv/rows";
	readahead=10;
	replicasize=10;
	autoquery=onfirstreveal;
	indicates_activity = no;

	created_cn1 "widget/connector" { target=chat_timer; event=Created; action=SetTimer; Time=1; }

	endquery_cn1 "widget/connector" { target=chat_timer; event=EndQuery; action=SetTimer; Time=30000; }
	endquery_cn2 "widget/connector" { event=EndQuery; target=log; action=SetValue; Value=runclient(:chat_osrc:hist); ContentType = runclient('text/plain'); }
	endquery_cn3 "widget/connector" { event=EndQuery; target=log; action=ShowText; }
	endquery_cn4 "widget/connector" { event=EndQuery; target=log_scroll; action=ScrollTo; Percent=100; }
	}

    log_pane "widget/pane"
	{
	x=8;y=8;width=384;height=254;
	style=lowered;
	bgcolor=white;

	log_scroll "widget/scrollpane"
	    {
	    x=0;y=0;width=382;height=252;

	    log "widget/html"
		{
		x=0;y=0;width=574;
		mode=dynamic;
		}
	    }
	}

    type_eb "widget/editbox"
	{
	x=8;y=270;height=22;width=384;
	enter_cn_1 "widget/connector" { target=chat_timer; event=ReturnPressed; action=CancelTimer; }
	enter_cn_2 "widget/connector" { target=chat_osrc; event=ReturnPressed; action=Create; c_message=runclient(:type_eb:content); c_from=runclient(user_name()); c_to=runclient(:chat:WithWhom); c_date=runclient(getdate()); c_viewed=runclient(0); }
	enter_cn_3 "widget/connector" { target=type_eb; event=ReturnPressed; action=SetValue; Value=runclient(''); }
	}
    }

