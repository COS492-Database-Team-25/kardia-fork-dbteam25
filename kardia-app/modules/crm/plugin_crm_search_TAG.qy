$Version=2$
plugin_crm_search_TAG "system/query"
    {
    // This query object provides the search stage support for
    // searching based on tags.
    //
    require_endorsement="system:from_application";

    search_id "query/parameter" { type=integer; }
    cur_stage "query/parameter" { type=integer; }
    prev_keys "query/parameter" { type=string; }

    sql = " -- First, we need to get our search stage information and config.
	    declare collection iresult scope application;
	    declare object stage;
	    select
		:stage:op = :s:p_stage_op,
		:stage:tag = convert(integer,:sc:tag),
		:stage:tag2 = convert(integer,:sc:tag2),
		:stage:tag3 = convert(integer,:sc:tag3),
		:stage:tag4 = convert(integer,:sc:tag4),
		:stage:startdate = convert(datetime,:sc:start),
		:stage:enddate = convert(datetime,:sc:end),
		:stage:certainty = convert(double,:sc:certainty),
		:stage:strength = convert(double,:sc:strength),
		:stage:comment = lower(:sc:comment)
	    from
		/apps/kardia/data/Kardia_DB/p_partner_search_stage/rows s,
		/apps/kardia/modules/crm/advanced_search_params.qyp sc
	    where
		:s:p_search_id = :parameters:search_id and
		:s:p_search_stage_id = :parameters:cur_stage and
		:sc:p_search_id = :s:p_search_id and
		:sc:p_search_stage_id = :s:p_search_stage_id
	    ;

	    -- Pass #2: generate new results if we're ADDING
	    insert
		collection iresult
	    select
		:p_partner_key,
		p_search_session_id = :parameters:search_id,
		p_search_stage_id = :parameters:cur_stage
	    from
		/apps/kardia/data/Kardia_DB/e_tag/rows t
	    where
		(isnull(isnull(isnull(:stage:tag,:stage:tag2),:stage:tag3),:stage:tag4) is null or :e_tag_id = :stage:tag or :e_tag_id = :stage:tag2 or :e_tag_id = :stage:tag3 or :e_tag_id = :stage:tag4) and
		(:e_tag_certainty >= isnull(:stage:certainty, 0.0)) and
		(:e_tag_strength >= isnull(:stage:strength, 0.01)) and
		(:stage:startdate is null or :t:s_date_created >= :stage:startdate) and
		(:stage:enddate is null or :t:s_date_created <= :stage:enddate) and
		(:stage:comment is null or charindex(:stage:comment, lower(:t:e_tag_comments)) > 0) and
		(:parameters:prev_keys is null or charindex(',' + rtrim(:t:p_partner_key) + ',', ',' + :parameters:prev_keys + ',') > 0)
	    on duplicate
		:p_partner_key,
		:p_search_session_id,
		:p_search_stage_id
	    update set
		:p_partner_key = :p_partner_key
	    ";
    }
