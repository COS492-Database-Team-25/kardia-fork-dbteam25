$Version=2$
plugin_crm_search_DON "system/query"
    {
    // This query object provides the search stage support for
    // searching based on a specific gift given.
    //
    require_endorsement="system:from_application";

    search_id "query/parameter" { type=integer; }
    cur_stage "query/parameter" { type=integer; }
    prev_keys "query/parameter" { type=string; }

    sql = " -- First, we need to get our search stage information and config.
	    declare collection iresult scope application;
	    declare object stage;
	    select
		:stage:op = :s:p_stage_op,
		:stage:startdate = convert(datetime,:sc:start),
		:stage:enddate = convert(datetime,:sc:end),
		:stage:funds = :sc:funds,
		--:stage:notfunds = :sc:notfunds,
		:stage:status = :sc:curstat,
                :stage:changes = :sc:changes,
                :stage:minamt = :sc:minamt,
		:stage:maxamt = :sc:maxamt,
		:stage:mintamt = :sc:mintamt,
		:stage:maxtamt = :sc:maxtamt,
		:stage:minfreq = :sc:minfreq,
		:stage:maxfreq = :sc:maxfreq,
                :stage:minavg = :sc:minavg,
                :stage:maxavg = :sc:maxavg,
		:stage:mincnt = :sc:mincnt,
		:stage:maxcnt = :sc:maxcnt
	    from
		/apps/kardia/data/Kardia_DB/p_partner_search_stage/rows s,
		/apps/kardia/modules/crm/advanced_search_params.qyp sc
	    where
		:s:p_search_id = :parameters:search_id and
		:s:p_search_stage_id = :parameters:cur_stage and
		:sc:p_search_id = :s:p_search_id and
		:sc:p_search_stage_id = :s:p_search_stage_id
	    ;

	    -- Now, create our local result set; we will merge it into the
	    -- main results later.
            -- This section allows overlapping date ranges
	    insert
		collection iresult
	    select
		p_partner_key = :dh:p_donor_partner_key,
		p_search_session_id = :parameters:search_id,
		p_search_stage_id = :parameters:cur_stage
	    from
		/apps/kardia/data/Kardia_DB/a_descriptives_hist/rows dh,
		/apps/kardia/data/Kardia_DB/a_descriptives/rows d
	    where
		:dh:a_ledger_number = :d:a_ledger_number and
		:dh:a_cost_center = :d:a_cost_center and
		:dh:p_donor_partner_key = :d:p_donor_partner_key and
                (:stage:startdate is null or :stage:startdate <= :dh:a_last_gift ) and
		(:stage:enddate is null or :dh:a_first_gift <= :stage:enddate) and
                (:stage:mintamt is null or :d:a_act_total >= convert(money, :stage:mintamt)) and
		(:stage:maxtamt is null or :d:a_act_total <= convert(money, :stage:maxtamt)) and
                (:stage:minamt is null or :dh:a_amount >= convert(money, :stage:minamt)) and
		(:stage:maxamt is null or :dh:a_amount <= convert(money, :stage:maxamt)) and
                (:stage:minavg is null or :d:a_act_average_amount >= convert(money, :stage:minavg)) and
		(:stage:maxavg is null or :d:a_act_average_amount <= convert(money, :stage:maxavg)) and
                -- allows for 15% error
                (:stage:minfreq is null or :dh:a_act_average_interval <= convert(double, :stage:minfreq) * 1.15) and
		(:stage:maxfreq is null or :dh:a_act_average_interval >= convert(double, :stage:maxfreq) * 0.85) and
                (:stage:mincnt is null or :d:a_act_count >= convert(integer, :stage:mincnt)) and
		(:stage:maxcnt is null or :d:a_act_count <= convert(integer, :stage:maxcnt)) and
		(:stage:funds is null or charindex(',' + :d:a_cost_center + ',', ',' + :stage:funds + ',') > 0) and
		-- (:stage:notfunds is null or charindex(',' + :d:a_cost_center + ',', ',' + :stage:notfunds + ',') = 0) and
                
                -- A decrease change means that a new giving history
                -- began within the time interval with a decrease in giving
                (:stage:changes is null or charindex(',DCR,', ',' + :stage:changes + ',') = 0 or :dh:a_decrease_pct is not null) and
                (:stage:changes is null or charindex(',DCR,', ',' + :stage:changes + ',') = 0 or :dh:a_first_gift >= :stage:startdate) and
                -- An increase change means that a new giving history
                -- began within the time interval with an increase in giving
                (:stage:changes is null or charindex(',ICR,', ',' + :stage:changes + ',') = 0 or :dh:a_increase_pct is not null) and
                (:stage:changes is null or charindex(',ICR,', ',' + :stage:changes + ',') = 0 or :dh:a_first_gift >= :stage:startdate) and
                -- An extra change means that an extra gift
                -- was givin within the time interval
                (:stage:changes is null or charindex(',EAM,', ',' + :stage:changes + ',') = 0 or :dh:a_is_extra = 1) and
                -- A last gift change means that a giving history became lapsed within
                -- the time interval and there are no other current active giving patterns.
                -- This excludes donors who have given a single gift
                (:stage:changes is null or charindex(',LGT,', ',' + :stage:changes + ',') = 0 or :dh:a_is_current = 0) and
                (:stage:changes is null or charindex(',LGT,', ',' + :stage:changes + ',') = 0 or :dh:a_last_gift <= :stage:enddate) and
                (:stage:changes is null or charindex(',LGT,', ',' + :stage:changes + ',') = 0 or :d:a_act_count > 1) and
                -- A first gift change means that a new giving history was started within
                -- the time interval that is not a decrease in giving or an extra gift. 
                (:stage:changes is null or charindex(',FGT,', ',' + :stage:changes + ',') = 0 or :dh:a_decrease_pct is null) and
                (:stage:changes is null or charindex(',FGT,', ',' + :stage:changes + ',') = 0 or :dh:a_first_gift >= :stage:startdate) and
                (:stage:changes is null or charindex(',FGT,', ',' + :stage:changes + ',') = 0 or :dh:a_is_extra = 0) and
                
                (:parameters:prev_keys is null or charindex(',' + rtrim(:dh:p_donor_partner_key) + ',', ',' + :parameters:prev_keys + ',') > 0)
            group by
                :d:a_ledger_number,
                :d:p_donor_partner_key
            having
                (:stage:status is null or convert(integer, :stage:status) = max(:d:a_is_current)) and
                (:stage:changes is null or charindex(',LGT,', ',' + :stage:changes + ',') = 0 or max(:d:a_is_current) = 0)
            on duplicate
		:p_partner_key,
		:p_search_session_id,
		:p_search_stage_id
	    update set
		:p_partner_key = :p_partner_key
	    ";
    }
