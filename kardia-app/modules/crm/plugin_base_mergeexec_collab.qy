$Version=2$
plugin_base_mergeexec_collab "system/query"
    {
    partner_a "query/parameter" { type=string; style=strnull; }
    partner_b "query/parameter" { type=string; style=strnull; }
    partner_c "query/parameter" { type=string; style=strnull; }

    sql = " -- Partner list
	    declare object info;
	    select :info:partners = ralign(:parameters:partner_a, 16) + ralign(:parameters:partner_b, 16) + ralign(isnull(:parameters:partner_c, ''), 16);

	    -- We could use the simpler update approach here, since currently this is marked
	    -- as disallowing copies, but in the future we might allow copies on this, so we're
	    -- sticking with the more complex insert/delete/update/delete 4-phase method.  We
	    -- would have to deal with the workflow type step however, as it does not allow copies.

	    -- Phase One, copy
	    insert
		/apps/kardia/data/Kardia_DB/e_collaborator/rows
	    select
		e_collaborator = '#' + ltrim(substring(:info:partners, (charindex(:abc:letter, 'ABC') - 1)*16 + 1, 16)),
		:c:p_partner_key,
		:c:e_collab_type_id,
		:c:e_silence_interval,
		:c:e_recontact_interval,
		:c:e_collaborator_status,
		:c:e_is_automatic,
		:c:s_date_created,
		:c:s_created_by,
		:c:s_date_modified,
		:c:s_modified_by
	    from
		/apps/kardia/modules/base/abc.csv/rows abc,
		/apps/kardia/data/Kardia_DB/p_merge/rows m,
		/apps/kardia/data/Kardia_DB/e_collaborator/rows c
	    where
		:m:p_data_source = 'CRM Collab' and
		:m:p_partner_key_a = :parameters:partner_a and
		:m:p_partner_key_b = :parameters:partner_b and
		charindex(:abc:letter, :m:p_disposition) >= 2 and
		:c:e_collaborator = ltrim(substring(:info:partners, (charindex(upper(substring(:m:p_disposition, 1, 1)), 'ABC') - 1)*16 + 1, 16))
	    ;

	    -- Phase One, copy, track collab
	    insert
		/apps/kardia/data/Kardia_DB/e_engagement_track_collab/rows
	    select
		p_collab_partner_key = '#' + ltrim(substring(:info:partners, (charindex(:abc:letter, 'ABC') - 1)*16 + 1, 16)),
		:tc:e_track_id,
		:tc:e_collab_type_id,
		:tc:e_comments,
		:tc:s_date_created,
		:tc:s_created_by,
		:tc:s_date_modified,
		:tc:s_modified_by
	    from
		/apps/kardia/modules/base/abc.csv/rows abc,
		/apps/kardia/data/Kardia_DB/p_merge/rows m,
		/apps/kardia/data/Kardia_DB/e_engagement_track_collab/rows tc
	    where
		:m:p_data_source = 'CRM Collab' and
		:m:p_partner_key_a = :parameters:partner_a and
		:m:p_partner_key_b = :parameters:partner_b and
		charindex(:abc:letter, :m:p_disposition) >= 2 and
		:tc:p_collab_partner_key = ltrim(substring(:info:partners, (charindex(upper(substring(:m:p_disposition, 1, 1)), 'ABC') - 1)*16 + 1, 16))
	    ;

	    -- Phase One, copy, step collab
	    insert
		/apps/kardia/data/Kardia_DB/e_engagement_step_collab/rows
	    select
		p_collab_partner_key = '#' + ltrim(substring(:info:partners, (charindex(:abc:letter, 'ABC') - 1)*16 + 1, 16)),
		:sc:e_track_id,
		:sc:e_step_id,
		:sc:e_collab_type_id,
		:sc:e_comments,
		:sc:s_date_created,
		:sc:s_created_by,
		:sc:s_date_modified,
		:sc:s_modified_by
	    from
		/apps/kardia/modules/base/abc.csv/rows abc,
		/apps/kardia/data/Kardia_DB/p_merge/rows m,
		/apps/kardia/data/Kardia_DB/e_engagement_step_collab/rows sc
	    where
		:m:p_data_source = 'CRM Collab' and
		:m:p_partner_key_a = :parameters:partner_a and
		:m:p_partner_key_b = :parameters:partner_b and
		charindex(:abc:letter, :m:p_disposition) >= 2 and
		:sc:p_collab_partner_key = ltrim(substring(:info:partners, (charindex(upper(substring(:m:p_disposition, 1, 1)), 'ABC') - 1)*16 + 1, 16))
	    ;

	    -- Phase One, copy, incomplete todos
	    insert
		/apps/kardia/data/Kardia_DB/e_todo/rows
	    select
		e_todo_collaborator = '#' + ltrim(substring(:info:partners, (charindex(:abc:letter, 'ABC') - 1)*16 + 1, 16)),
		:t:e_todo_type_id,
		:t:e_todo_desc,
		:t:e_todo_comments,
		:t:e_todo_completion_date,
		:t:e_todo_canceled_date,
		:t:e_todo_due_date,
		:t:e_todo_partner,
		:t:e_todo_engagement_id,
		:t:e_todo_document_id,
		:t:e_todo_req_item_id,
		:t:s_date_created,
		:t:s_created_by,
		:t:s_date_modified,
		:t:s_modified_by
	    from
		/apps/kardia/modules/base/abc.csv/rows abc,
		/apps/kardia/data/Kardia_DB/p_merge/rows m,
		/apps/kardia/data/Kardia_DB/e_todo/rows t
	    where
		:m:p_data_source = 'CRM Collab' and
		:m:p_partner_key_a = :parameters:partner_a and
		:m:p_partner_key_b = :parameters:partner_b and
		charindex(:abc:letter, :m:p_disposition) >= 2 and
		:t:e_todo_collaborator = ltrim(substring(:info:partners, (charindex(upper(substring(:m:p_disposition, 1, 1)), 'ABC') - 1)*16 + 1, 16)) and
		:t:e_todo_status = 'I'
	    ;

	    -- Workflow type step - collaborator
	    update
		identity /apps/kardia/data/Kardia_DB/e_workflow_type_step/rows ws,
		/apps/kardia/data/Kardia_DB/p_merge/rows m
	    set
		:ws:e_collaborator = '#' + condition(ascii(substring(:m:p_disposition, 2, 1)) = 65, :parameters:partner_a, condition(ascii(substring(:m:p_disposition, 2, 1)) = 66, :parameters:partner_b, condition(ascii(substring(:m:p_disposition, 2, 1)) = 67, :parameters:partner_c, NULL)))
	    where
		:ws:e_collaborator = condition(ascii(:m:p_disposition) = 97, :parameters:partner_a, condition(ascii(:m:p_disposition) = 98, :parameters:partner_b, NULL)) and
		:m:p_data_source = 'CRM Collab' and
		:m:p_partner_key_a = :parameters:partner_a and
		:m:p_partner_key_b = :parameters:partner_b
	    ;

	    -- Phase Two, delete/cut
	    delete
		identity /apps/kardia/data/Kardia_DB/e_collaborator/rows c,
		/apps/kardia/data/Kardia_DB/p_merge/rows m
	    where
		:m:p_data_source = 'CRM Collab' and
		:m:p_partner_key_a = :parameters:partner_a and
		:m:p_partner_key_b = :parameters:partner_b and
		ascii(:m:p_disposition) > 96 and
		:c:e_collaborator = ltrim(substring(:info:partners, (charindex(substring(:m:p_disposition, 1, 1), 'abc') - 1)*16 + 1, 16))
	    ;

	    -- Phase Two, delete/cut, track collab
	    delete
		identity /apps/kardia/data/Kardia_DB/e_engagement_track_collab/rows tc,
		/apps/kardia/data/Kardia_DB/p_merge/rows m
	    where
		:m:p_data_source = 'CRM Collab' and
		:m:p_partner_key_a = :parameters:partner_a and
		:m:p_partner_key_b = :parameters:partner_b and
		ascii(:m:p_disposition) > 96 and
		:tc:p_collab_partner_key = ltrim(substring(:info:partners, (charindex(substring(:m:p_disposition, 1, 1), 'abc') - 1)*16 + 1, 16))
	    ;

	    -- Phase Two, delete/cut, step collab
	    delete
		identity /apps/kardia/data/Kardia_DB/e_engagement_step_collab/rows sc,
		/apps/kardia/data/Kardia_DB/p_merge/rows m
	    where
		:m:p_data_source = 'CRM Collab' and
		:m:p_partner_key_a = :parameters:partner_a and
		:m:p_partner_key_b = :parameters:partner_b and
		ascii(:m:p_disposition) > 96 and
		:sc:p_collab_partner_key = ltrim(substring(:info:partners, (charindex(substring(:m:p_disposition, 1, 1), 'abc') - 1)*16 + 1, 16))
	    ;

	    -- Phase Two, delete/cut, incomplete todos
	    delete
		identity /apps/kardia/data/Kardia_DB/e_todo/rows t,
		/apps/kardia/data/Kardia_DB/p_merge/rows m
	    where
		:m:p_data_source = 'CRM Collab' and
		:m:p_partner_key_a = :parameters:partner_a and
		:m:p_partner_key_b = :parameters:partner_b and
		ascii(:m:p_disposition) > 96 and
		:t:e_todo_collaborator = ltrim(substring(:info:partners, (charindex(substring(:m:p_disposition, 1, 1), 'abc') - 1)*16 + 1, 16)) and
		:t:e_todo_status = 'I'
	    ;

	    -- Phase Three, correct our temporary keys
	    update
		/apps/kardia/data/Kardia_DB/e_collaborator/rows
	    set
		:e_collaborator = substring(rtrim(:e_collaborator), 2, 16)
	    where
		:e_collaborator = '#' + :parameters:partner_a or :e_collaborator = '#' + :parameters:partner_b or :e_collaborator = '#' + :parameters:partner_c
	    ;

	    -- Phase Three, correct our temporary keys, track collab
	    update
		/apps/kardia/data/Kardia_DB/e_engagement_track_collab/rows
	    set
		:p_collab_partner_key = substring(rtrim(:p_collab_partner_key), 2, 16)
	    where
		:p_collab_partner_key = '#' + :parameters:partner_a or :p_collab_partner_key = '#' + :parameters:partner_b or :p_collab_partner_key = '#' + :parameters:partner_c
	    ;

	    -- Phase Three, correct our temporary keys, step collab
	    update
		/apps/kardia/data/Kardia_DB/e_engagement_step_collab/rows
	    set
		:p_collab_partner_key = substring(rtrim(:p_collab_partner_key), 2, 16)
	    where
		:p_collab_partner_key = '#' + :parameters:partner_a or :p_collab_partner_key = '#' + :parameters:partner_b or :p_collab_partner_key = '#' + :parameters:partner_c
	    ;

	    -- Phase Three, correct our temporary keys, incomplete todos
	    update
		/apps/kardia/data/Kardia_DB/e_todo/rows
	    set
		:e_todo_collaborator = substring(rtrim(:e_todo_collaborator), 2, 16)
	    where
		:e_todo_collaborator = '#' + :parameters:partner_a or :e_todo_collaborator = '#' + :parameters:partner_b or :e_todo_collaborator = '#' + :parameters:partner_c
	    ;

	    -- Correct temp keys, workflow type step collab
	    update /apps/kardia/data/Kardia_DB/e_workflow_type_step/rows
		set :e_collaborator = substring(:e_collaborator, 2, 16)
		where (:e_collaborator = '#' + :parameters:partner_a or :e_collaborator = '#' + :parameters:partner_b or :e_collaborator = '#' + :parameters:partner_c)
	    ;

	    -- Phase four, clean up anything that would not copy over (conflicting records)
	    delete
		/apps/kardia/data/Kardia_DB/e_collaborator/rows
	    where
		:e_collaborator = '#' + :parameters:partner_a or :e_collaborator = '#' + :parameters:partner_b or :e_collaborator = '#' + :parameters:partner_c
	    ;

	    -- Phase four, clean up anything that would not copy over (conflicting records), track collab
	    delete
		/apps/kardia/data/Kardia_DB/e_engagement_track_collab/rows
	    where
		:p_collab_partner_key = '#' + :parameters:partner_a or :p_collab_partner_key = '#' + :parameters:partner_b or :p_collab_partner_key = '#' + :parameters:partner_c
	    ;

	    -- Phase four, clean up anything that would not copy over (conflicting records), step collab
	    delete
		/apps/kardia/data/Kardia_DB/e_engagement_step_collab/rows
	    where
		:p_collab_partner_key = '#' + :parameters:partner_a or :p_collab_partner_key = '#' + :parameters:partner_b or :p_collab_partner_key = '#' + :parameters:partner_c
	    ;

	    -- Phase four, clean up anything that would not copy over (conflicting records), incomplete todos
	    delete
		/apps/kardia/data/Kardia_DB/e_todo/rows
	    where
		:e_todo_collaborator = '#' + :parameters:partner_a or :e_todo_collaborator = '#' + :parameters:partner_b or :e_todo_collaborator = '#' + :parameters:partner_c
	    ;

	    -- Return
	    -- Return
	    select 1 where 1 = 0
	    ";
    }
