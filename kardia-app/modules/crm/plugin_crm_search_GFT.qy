$Version=2$
plugin_crm_search_GFT "system/query"
    {
    // This query object provides the search stage support for
    // searching based on a specific gift given.
    //
    require_endorsement="system:from_application";

    search_id "query/parameter" { type=integer; }
    cur_stage "query/parameter" { type=integer; }
    prev_stage "query/parameter" { type=integer; }

    sql = " -- First, we need to get our search stage information and config.
	    declare collection advsearch scope application;
	    declare object stage;
	    select
		:stage:op = :s:p_stage_op,
		:stage:startdate = convert(datetime,:sc:start),
		:stage:enddate = convert(datetime,:sc:end),
		:stage:fund = :sc:fund,
		:stage:minamt = :sc:minamt,
		:stage:maxamt = :sc:maxamt,
		:stage:gift_type = :sc:gift_type,
		:stage:comment = :sc:comment
	    from
		/apps/kardia/data/Kardia_DB/p_partner_search_stage/rows s,
		/apps/kardia/modules/crm/advanced_search_params.qyp sc
	    where
		:s:p_search_id = :parameters:search_id and
		:s:p_search_stage_id = :parameters:cur_stage and
		:sc:p_search_id = :s:p_search_id and
		:sc:p_search_stage_id = :s:p_search_stage_id
	    ;

	    -- Delete any previous results.
--	    delete
--		/apps/kardia/data/Kardia_DB/p_partner_search_results/rows
--	    where
--		:s_username = user_name() and
--		:p_search_session_id = :parameters:search_id and
--		:p_search_stage_id = :parameters:cur_stage
--	    ;

	    -- Now create this stage's results.
	    -- Pass #1: copy previous results if we're ADDING.
	    insert
		--/apps/kardia/data/Kardia_DB/p_partner_search_results/rows
		collection advsearch
	    select
		:p_partner_key,
		--:s_username,
		:p_search_session_id,
		p_search_stage_id = :parameters:cur_stage,
		p_sortkey = ''--,
		--s_date_created = getdate(),
		--s_created_by = user_name(),
		--s_date_modified = getdate(),
		--s_modified_by = user_name()
	    from
		--/apps/kardia/data/Kardia_DB/p_partner_search_results/rows s
		collection advsearch s
	    where
		--:s:s_username = user_name() and
		:s:p_search_session_id = :parameters:search_id and
		:s:p_search_stage_id = :parameters:prev_stage and
		:stage:op = 'A'
	    ;

	    -- Pass #2: generate new results if we're ADDING
	    insert
		--/apps/kardia/data/Kardia_DB/p_partner_search_results/rows
		collection advsearch
	    select
		p_partner_key = :p_dn_donor_partner_id,
		--s_username = user_name(),
		p_search_session_id = :parameters:search_id,
		p_search_stage_id = :parameters:cur_stage,
		p_sortkey = ''--,
		--s_date_created = getdate(),
		--s_created_by = user_name(),
		--s_date_modified = getdate(),
		--s_modified_by = user_name()
	    from
		/apps/kardia/data/Kardia_DB/a_subtrx_gift_item/rows i
	    where
		(:stage:comment is null or charindex(:stage:comment, :i:a_comment) > 0) and
		(:stage:fund is null or :i:a_cost_center = :stage:fund) and
		:i:a_posted = 1 and
		(:stage:minamt is null or :i:a_amount >= convert(money,:stage:minamt)) and
		(:stage:maxamt is null or :i:a_amount <= convert(money,:stage:maxamt)) and
		(:stage:startdate is null or isnull(:i:a_dn_gift_postmark_date, :i:a_dn_gift_received_date) >= :stage:startdate) and
		(:stage:enddate is null or isnull(:i:a_dn_gift_postmark_date, :i:a_dn_gift_received_date) <= :stage:enddate) and
		(:stage:gift_type is null or charindex(:i:a_dn_gift_type, :stage:gift_type) > 0) and
		:stage:op = 'A'
	    group by
		:i:p_dn_donor_partner_id
	    on duplicate
		:p_partner_key,
		:p_search_session_id,
		:p_search_stage_id
	    update set
		:p_partner_key = :p_partner_key
	    ;

	    -- Pass #3: filter existing results if we are restricting
	    insert
		--/apps/kardia/data/Kardia_DB/p_partner_search_results/rows
		collection advsearch
	    select
		:sr:p_partner_key,
		--s_username = user_name(),
		p_search_session_id = :parameters:search_id,
		p_search_stage_id = :parameters:cur_stage,
		p_sortkey = ''--,
		--s_date_created = getdate(),
		--s_created_by = user_name(),
		--s_date_modified = getdate(),
		--s_modified_by = user_name()
	    from
		--/apps/kardia/data/Kardia_DB/p_partner_search_results/rows sr,
		collection advsearch sr,
		/apps/kardia/data/Kardia_DB/a_subtrx_gift_item/rows i
	    where
		--:sr:s_username = user_name() and
		:sr:p_search_session_id = :parameters:search_id and
		:sr:p_search_stage_id = :parameters:prev_stage and
		:stage:op = 'R' and
		:sr:p_partner_key = :i:p_dn_donor_partner_id and
		:i:a_posted = 1 and
		(:stage:comment is null or charindex(:stage:comment, :i:a_comment) > 0) and
		(:stage:fund is null or :i:a_cost_center = :stage:fund) and
		(:stage:minamt is null or :i:a_amount >= convert(money,:stage:minamt)) and
		(:stage:maxamt is null or :i:a_amount <= convert(money,:stage:maxamt)) and
		(:stage:startdate is null or isnull(:i:a_dn_gift_postmark_date, :i:a_dn_gift_received_date) >= :stage:startdate) and
		(:stage:enddate is null or isnull(:i:a_dn_gift_postmark_date, :i:a_dn_gift_received_date) <= :stage:enddate) and
		(:stage:gift_type is null or charindex(:i:a_dn_gift_type, :stage:gift_type) > 0)
	    group by
		:sr:p_partner_key,
		:i:p_dn_donor_partner_id
	    ;

	    -- Pass #4: filter existing results if we are excluding
	    insert
		--/apps/kardia/data/Kardia_DB/p_partner_search_results/rows
		collection advsearch
	    select
		:sr:p_partner_key,
		--s_username = user_name(),
		p_search_session_id = :parameters:search_id,
		p_search_stage_id = :parameters:cur_stage,
		p_sortkey = ''--,
		--s_date_created = getdate(),
		--s_created_by = user_name(),
		--s_date_modified = getdate(),
		--s_modified_by = user_name()
	    from
		--/apps/kardia/data/Kardia_DB/p_partner_search_results/rows sr,
		collection advsearch sr,
		/apps/kardia/data/Kardia_DB/a_subtrx_gift_item/rows i
	    where
		--:sr:s_username = user_name() and
		:sr:p_search_session_id = :parameters:search_id and
		:sr:p_search_stage_id = :parameters:prev_stage and
		:stage:op = 'E' and
		:sr:p_partner_key *= :i:p_dn_donor_partner_id and
		:i:a_posted = 1 and
		(:stage:comment is null or charindex(:stage:comment, :i:a_comment) > 0) and
		(:stage:fund is null or :i:a_cost_center = :stage:fund) and
		(:stage:minamt is null or :i:a_amount >= convert(money,:stage:minamt)) and
		(:stage:maxamt is null or :i:a_amount <= convert(money,:stage:maxamt)) and
		(:stage:startdate is null or isnull(:i:a_dn_gift_postmark_date, :i:a_dn_gift_received_date) >= :stage:startdate) and
		(:stage:enddate is null or isnull(:i:a_dn_gift_postmark_date, :i:a_dn_gift_received_date) <= :stage:enddate) and
		(:stage:gift_type is null or charindex(:i:a_dn_gift_type, :stage:gift_type) > 0)
	    group by
		:sr:p_partner_key
	    having
		count(:i:p_dn_donor_partner_id) = 0
	    ";
    }
