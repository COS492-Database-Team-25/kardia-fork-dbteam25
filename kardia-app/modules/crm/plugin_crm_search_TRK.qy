$Version=2$
plugin_crm_search_TRK "system/query"
    {
    // This query object provides the search stage support for
    // searching based on tracks and steps.
    //
    require_endorsement="system:from_application";

    search_id "query/parameter" { type=integer; }
    cur_stage "query/parameter" { type=integer; }
    prev_keys "query/parameter" { type=string; }

    sql = " -- First, we need to get our search stage information and config.
	    declare collection iresult scope application;
	    declare object stage;
	    select
		:stage:op = :s:p_stage_op,
		:stage:track = convert(integer,:sc:track),
		:stage:step = convert(integer,:sc:step),
		:stage:curstep = convert(integer, :sc:curstep),
		:stage:notstep = convert(integer,:sc:notstep),
		:stage:startdate = convert(datetime,:sc:start),
		:stage:enddate = convert(datetime,:sc:end),
		:stage:comment = lower(:sc:comment)
	    from
		/apps/kardia/data/Kardia_DB/p_partner_search_stage/rows s,
		/apps/kardia/modules/crm/advanced_search_params.qyp sc
	    where
		:s:p_search_id = :parameters:search_id and
		:s:p_search_stage_id = :parameters:cur_stage and
		:sc:p_search_id = :s:p_search_id and
		:sc:p_search_stage_id = :s:p_search_stage_id
	    ;

	    -- Generate the intermediate results
	    insert
		collection iresult
	    select
		:e:p_partner_key,
		p_search_session_id = :parameters:search_id,
		p_search_stage_id = :parameters:cur_stage
	    from
		/apps/kardia/data/Kardia_DB/e_partner_engagement/rows e
	    where
		:e:e_is_archived = 0 and
		:e:e_completion_status != 'E' and
		(:stage:track is null or :e:e_track_id = :stage:track) and
		(:stage:comment is null or charindex(:stage:comment, lower(:e:e_comments)) > 0 or charindex(:stage:comment, lower(:e:e_desc)) > 0) and
		(isnull(:stage:curstep, 0) = 0 or :e:e_completion_status = 'I') and
		(:parameters:prev_keys is null or charindex(',' + rtrim(:e:p_partner_key) + ',', ',' + :parameters:prev_keys + ',') > 0)
	    group by
		:e:p_partner_key
	    having
		(:stage:step is null or sum(condition(:e:e_step_id = :stage:step and :e:e_track_id = :stage:track, 1, 0)) > 0) and
		(:stage:notstep is null or isnull(sum(condition(:e:e_step_id = :stage:notstep and :e:e_track_id = :stage:track, 1, 0)), 0) = 0) and
		(:stage:startdate is null or sum(condition(:e:e_step_id = :stage:step and :e:e_track_id = :stage:track and :e:e_start_date >= :stage:startdate, 1, 0)) > 0) and
		(:stage:enddate is null or sum(condition(:e:e_step_id = :stage:step and :e:e_track_id = :stage:track and :e:e_start_date <= :stage:enddate, 1, 0)) > 0)
	    on duplicate
		:p_partner_key,
		:p_search_session_id,
		:p_search_stage_id
	    update set
		:p_partner_key = :p_partner_key
	    ";
    }
