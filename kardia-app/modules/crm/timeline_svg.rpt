$Version=2$
timeline_svg "system/report"
    {
    document_format="text/plain";
    content_type="image/svg+xml";
    pagewidth=255;
    pageheight=255;
    marginleft=0;
    marginright=0;
    margintop=0;
    marginbottom=0;
    text_pagebreak = no;

    // Partner ID
    //partner "report/parameter" { type=string; allowchars="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz"; default=""; }
    //cclist "report/parameter" { type=string; allowchars="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz.,:-"; default=""; }
    id "report/parameter" { type=integer; }
    image_width "report/parameter" { type=double; default=450.0; }
    timeline_width "report/parameter" { type=double; default=430.0; }
    timeline_end "report/parameter" { type=double; default=439.0; }

    // First and last dates for events
    first_last_qy "report/query"
	{
	sql = runserver("select first_date=min(:e_activity_date), last_date=dateadd(year,1,max(:e_activity_date)) from /apps/kardia/data/Kardia_DB/e_activity/rows where :e_activity_group_id = :this:id");
	// We add a year here because we want to be able to see UP TO the next year.
	}

    // Optimum date block interval
    interval_qy "report/query"
	{
	sql = "select range = datediff(year,:first_last_qy:first_date,:first_last_qy:last_date), interval = condition((datediff(year,:first_last_qy:first_date,:first_last_qy:last_date) + 1) / 10 > 0, (datediff(year,:first_last_qy:first_date,:first_last_qy:last_date) + 1) / 9, 1)";
	}

    // Date bars
    datebar_qy "report/query"
	{
	// A dummy source just to nab N records
	sql = runserver("select :name from /apps/kardia/modules/base limit " + (:interval_qy:range + 1));
	// Range is plus 1 because we're plotting an extra year.
	}

    entrydate_qy "report/query"
	{
	// Select all the dates from entries
	sql = runserver("select :e_activity_date from /apps/kardia/data/Kardia_DB/e_activity/rows where :e_activity_group_id = :this:id");
	}

    main_form "report/form"
	{
	source=first_last_qy,interval_qy;

	// SVG header
	hdr "report/area"
	    {
	    x=0; y=0; width=255; height=0;
	    value=runserver('<?xml version="1.0" standalone="no"?>\n<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">\n<svg width="450px" height="32px" viewBox="0 0 450px 32px" xmlns="http://www.w3.org/2000/svg" version="1.1">\n');
	    }

	datebars_begin "report/area"
	    {
	    width=255; height=0;
	    value=runserver('<g stroke="rgb(0,0,0)" shape-rendering="crispEdges">\n');
	    //value=runserver('<g stroke="rgb(224,224,224)">\n');
	    }

	datebar_form "report/form"
	    {
	    source=datebar_qy;

	    one_datebar "report/area"
		{
		width=255; height=0;
		value=runserver('<line x1="' + (:this:timeline_end - ((1.0 * :datebar_qy:cx__rowid) * (:this:timeline_width / :interval_qy:range))) + 'px" y1="0" x2="' + (:this:timeline_end - ((1.0 * :datebar_qy:cx__rowid) * (:this:timeline_width / :interval_qy:range))) + 'px" y2="22px" stroke-width="1px"' +  condition(((:datebar_qy:cx__rowid) / :interval_qy:interval) * :interval_qy:interval == :datebar_qy:cx__rowid, '', ' stroke-dasharray="1,3"') + '/>\n');
		}
	    }

	datebars_end "report/area"
	    {
	    width=255; height=0;
	    value=runserver('</g>\n');
	    }

	datelabels_begin "report/area" { width=255; height=0; value=runserver('<g fill="#334466">\n'); }

	datelabels "report/form"
	    {
	    source=datebar_qy;

	    one_label "report/area"
		{
		width=255; height=0;
		condition=runserver(((:datebar_qy:cx__rowid) / :interval_qy:interval) * :interval_qy:interval == :datebar_qy:cx__rowid);
		value=runserver('<text x="' + ((:this:timeline_end) - ((1.0 * :datebar_qy:cx__rowid) * (:this:timeline_width / :interval_qy:range)) - 10) + 'px" y="31px" font-family="Arial,Helvetica,Sans-serif" font-size="9">' + (datepart(year,:first_last_qy:last_date) - :datebar_qy:cx__rowid) + '</text>\n');
		}
	    }


	datelabels_end "report/area" { width=255; height=0; value=runserver('</g>\n'); }

	entrydates_begin "report/area"
	    {
	    width=255; height=0;
	    value=runserver('<g stroke="rgb(0,200,0)" shape-rendering="crispEdges">\n');
	    //value=runserver('<g stroke="rgb(224,224,224)">\n');
	    }

	entrydates_form "report/form"
	    {
	    source = entrydate_qy;
	    
	    one_entry "report/area"
		{
		width=255; height=0;
		condition=runserver(:entrydate_qy:cx__rowid != 0);
		// The first query is always the current date so skip it.
		//sql = "select year_percent = (datediff(year,:first_last_qy:first_date,:entrydate_qy:e_activity_date) / datediff(year,:first_last_qy:last_date,:first_last_qy:first_date)) , month_percent = (datepart(month,:entrydate_qy:e_activity_date) / 12 / :interval_qy:range) , day_percent = (datepart(day,:entrydate_qy:e_activity_date) / 365 / :interval_qy:range)";
		//sql = "select full_percentage =:one_entry:year_percent + :one_entry:month_percent + :one_entry:day_percent";
		//value=runserver('<line x1="' + ((:one_entry:year_percent + :one_entry:month_percent + :one_entry:day_pecent) * 430 + 10) + 'px" y1="10px" x2="' + ((:one_entry:year_percent + :one_entry:month_percent + :one_entry:day_pecent) * 430 + 10) + 'px" y2="20px" stroke-width="1px"/>\n');
		// The above code was an atempt at using variables to make the code more 
		//	readable. I've currently abandonded it as using the variables 
		//	always made the line show up as "NULL" for some reason.
		value=runserver('<line x1="' + ((((1.0 * (datepart(year,:entrydate_qy:e_activity_date) - datepart(year,:first_last_qy:first_date))) / (datepart(year,:first_last_qy:last_date) - datepart(year,:first_last_qy:first_date))) * 430 + 9) + ((1.0 * (datepart(month,:entrydate_qy:e_activity_date) - 1) / 12 / :interval_qy:range) * 430) + ((1.0 * (datepart(day,:entrydate_qy:e_activity_date) - 1) / 365 / :interval_qy:range) * 430)) + 'px" y1="5px" x2="' + ((((1.0 * (datepart(year,:entrydate_qy:e_activity_date) - datepart(year,:first_last_qy:first_date))) / (datepart(year,:first_last_qy:last_date) - datepart(year,:first_last_qy:first_date))) * 430 + 9) + ((1.0 * (datepart(month,:entrydate_qy:e_activity_date) - 1) / 12 / :interval_qy:range) * 430) + ((1.0 * (datepart(day,:entrydate_qy:e_activity_date) - 1) / 365 / :interval_qy:range) * 430)) + 'px" y2="18px" stroke-width="1px"/>\n');
		// This nastyness is extreamly unreadable, I know. I will do what I can, but it may have to stay that way.
		//value=runserver('<line x1="' + datepart(month,:entrydate_qy:e_activity_date) + 'px" y1="' + datepart(day,:entrydate_qy:e_activity_date) + 'px" x2="' +  datepart(year,:entrydate_qy:e_activity_date) + 'px" y2="18px" stroke-width="1px"/>\n');
		// Some hack code to see what date is outputting when
		}
	    }
	entrydates_end "report/area"
	    {
	    width=255; height=0;
	    value=runserver('</g>\n');
	    }

	ftr "report/area"
	    {
	    width=255; height=0;
	    value=runserver('</svg>\n');
	    }
	}
    }
