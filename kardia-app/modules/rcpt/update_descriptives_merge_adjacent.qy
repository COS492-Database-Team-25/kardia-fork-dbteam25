$Version=2$
update_descriptives_merge_catchup "system/query"
    {
    fund "query/parameter" { type=string; style=strnull;}
    donor "query/parameter" { type=string; style=strnull;}

    sql = " declare collection tmp scope application;

	    -- Locate adjacent segments: compare the combined segments average to the
	    -- longer segment's average.
	    update
		identity /apps/kardia/data/Kardia_DB/a_descriptives_hist/rows dh1,
		/apps/kardia/data/Kardia_DB/a_descriptives_hist/rows dh2
	    set
		:a_merged_id = isnull(:dh2:a_merged_id, :dh2:a_hist_id)
	    where
		(:parameters:fund is null or :parameters:fund = :dh2:a_cost_center) and
		(:parameters:donor is null or :parameters:donor = :dh2:p_donor_partner_key) and
		:dh2:a_ledger_number = :dh1:a_ledger_number and
		:dh2:a_cost_center = :dh1:a_cost_center and
		:dh2:p_donor_partner_key = :dh1:p_donor_partner_key and
		:dh2:a_amount = :dh1:a_amount and
		:dh1:a_hist_id < :dh2:a_hist_id and
		(:dh1:a_total + :dh2:a_total) * ((1.0 * (:dh1:a_count + :dh2:a_count - 1)) / (1.0 * (:dh1:a_count + :dh2:a_count))) / (datediff(day, condition(:dh1:a_first_gift < :dh2:a_first_gift, :dh1:a_first_gift, :dh2:a_first_gift), condition(:dh1:a_last_gift > :dh2:a_last_gift, :dh1:a_last_gift, :dh2:a_last_gift)) / 30.5) > 0.95 * (condition(:dh1:a_count > :dh2:a_count, isnull(:dh1:a_act_average_amount, :dh1:a_amount), isnull(:dh2:a_act_average_amount, :dh2:a_amount))) and
		(:dh1:a_total + :dh2:a_total) * ((1.0 * (:dh1:a_count + :dh2:a_count - 1)) / (1.0 * (:dh1:a_count + :dh2:a_count))) / (datediff(day, condition(:dh1:a_first_gift < :dh2:a_first_gift, :dh1:a_first_gift, :dh2:a_first_gift), condition(:dh1:a_last_gift > :dh2:a_last_gift, :dh1:a_last_gift, :dh2:a_last_gift)) / 30.5) < 1.05 * (condition(:dh1:a_count > :dh2:a_count, isnull(:dh1:a_act_average_amount, :dh1:a_amount), isnull(:dh2:a_act_average_amount, :dh2:a_amount)))
	    ;

	    -- Step Two: Merge
	    update
		identity /apps/kardia/data/Kardia_DB/a_descriptives_hist/rows dh2,
		/apps/kardia/data/Kardia_DB/a_descriptives_hist/rows dh1
	    set
		:dh2:a_act_average_amount = ((:dh1:a_total + :dh2:a_total) * ((1.0 * (:dh1:a_count + :dh2:a_count)) / (1.0 * (:dh1:a_count + :dh2:a_count - 1))) / datediff(day, condition(:dh1:a_first_gift < :dh2:a_first_gift, :dh1:a_first_gift, :dh2:a_first_gift), condition(:dh1:a_last_gift > :dh2:a_last_gift, :dh1:a_last_gift, :dh2:a_last_gift))) * 30.5,
		:dh2:a_act_average_interval = (datediff(day, condition(:dh1:a_first_gift > :dh2:a_first_gift, :dh2:a_first_gift, :dh1:a_first_gift), condition(:dh1:a_last_gift < :dh2:a_last_gift, :dh2:a_last_gift, :dh1:a_last_gift)) / 30.5) / convert(double, count(1) - 1),
		:dh2:a_act_average_months = convert(integer, round(datediff(day, condition(:dh1:a_first_gift > :dh2:a_first_gift, :dh2:a_first_gift, :dh1:a_first_gift), condition(:dh1:a_last_gift < :dh2:a_last_gift, :dh2:a_last_gift, :dh1:a_last_gift)) / 30.5)),
		:dh2:a_count = :dh2:a_count + :dh1:a_count,
		:dh2:a_total = :dh2:a_total + :dh1:a_total,
		:dh2:a_first_gift = condition(:dh1:a_first_gift > :dh2:a_first_gift, :dh2:a_first_gift, :dh1:a_first_gift),
		:dh2:a_last_gift = condition(:dh1:a_last_gift < :dh2:a_last_gift, :dh2:a_last_gift, :dh1:a_last_gift)
	    where
		(:parameters:fund is null or :parameters:fund = :dh2:a_cost_center) and
		(:parameters:donor is null or :parameters:donor = :dh2:p_donor_partner_key) and
		:dh2:a_ledger_number = :dh1:a_ledger_number and
		:dh2:a_cost_center = :dh1:a_cost_center and
		:dh2:p_donor_partner_key = :dh1:p_donor_partner_key and
		:dh1:a_merged_id = :dh2:a_hist_id
	    ;

	    -- Step Three: Delete Merged
	    delete
		/apps/kardia/data/Kardia_DB/a_descriptives_hist/rows dh1
	    where
		(:parameters:fund is null or :parameters:fund = :dh1:a_cost_center) and
		(:parameters:donor is null or :parameters:donor = :dh1:p_donor_partner_key) and
		:dh1:a_merged_id is not null
	    ";
    }
